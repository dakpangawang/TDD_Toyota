<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="3" hostname="ngawangs10" failures="0" tests="1" name="Default test" time="8.788" errors="0" timestamp="2023-02-18T00:21:05 GMT-05:00">
  <testcase classname="toyota.tdd.base.BaseClass" name="@BeforeMethod setUpDriver" time="8.622">
    <failure type="org.openqa.selenium.InvalidSelectorException" message="Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: &amp;apos;4.7.2&amp;apos;, revision: &amp;apos;4d4020c3b7&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.4.1&amp;apos;
Driver info: driver.version: unknown">
      <![CDATA[org.openqa.selenium.InvalidSelectorException: Compound class names not permitted
For documentation on this error, please visit: https://selenium.dev/exceptions/#invalid_selector_exception
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: driver.version: unknown
at org.openqa.selenium.By$ByClassName.<init>(By.java:310)
at org.openqa.selenium.By.className(By.java:100)
at org.openqa.selenium.support.AbstractFindByBuilder.buildByFromShortFindBy(AbstractFindByBuilder.java:43)
at org.openqa.selenium.support.FindBy$FindByBuilder.buildIt(FindBy.java:85)
at org.openqa.selenium.support.pagefactory.Annotations.buildBy(Annotations.java:79)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.<init>(DefaultElementLocator.java:58)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.<init>(DefaultElementLocator.java:46)
at org.openqa.selenium.support.pagefactory.DefaultElementLocatorFactory.createLocator(DefaultElementLocatorFactory.java:33)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:57)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:111)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:103)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:90)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:78)
at toyota.tdd.objects.CamryLEHybridPage.<init>(CamryLEHybridPage.java:14)
at toyota.tdd.base.BaseClass.initClasses(BaseClass.java:55)
at toyota.tdd.base.BaseClass.setUpDriver(BaseClass.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:589)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUpDriver -->
  <testcase classname="toyota.tdd.base.BaseClass" name="@AfterMethod getResult" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod getResult -->
  <testcase classname="toyota.tdd.base.BaseClass" name="@AfterMethod tearUp" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod tearUp -->
  <testcase classname="toyota.tdd.test.auto.BuildPriceTest" name="buldAndPriceTest" time="0.002">
    <skipped/>
  </testcase> <!-- buldAndPriceTest -->
  <testcase classname="toyota.tdd.test.auto.BuildPriceTest" name="test02" time="0.0">
    <ignored/>
  </testcase> <!-- test02 -->
  <testcase classname="toyota.tdd.test.auto.BuildPriceTest" name="test01" time="0.0">
    <ignored/>
  </testcase> <!-- test01 -->
  <testcase classname="toyota.tdd.test.auto.BuildPriceTest" name="testRetry" time="0.0">
    <ignored/>
  </testcase> <!-- testRetry -->
</testsuite> <!-- Default test -->
